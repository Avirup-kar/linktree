{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/lib/mongodb.js"],"sourcesContent":["// lib/mongodb.js\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error('Add Mongo URI to .env.local')\r\n}\r\n\r\nif (process.env.NODE_ENV === 'development') { \r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options)\r\n    global._mongoClientPromise = client.connect()\r\n  }\r\n  clientPromise = global._mongoClientPromise\r\n} else {\r\n  client = new MongoClient(uri, options)\r\n  clientPromise = client.connect()\r\n}\r\n\r\nexport default clientPromise"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAEjB;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C,OAAO;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/app/api/add/route.js"],"sourcesContent":["\"use server\"\r\n\r\nimport clientPromise from \"@/lib/mongodb\";\r\n\r\nexport async function POST(request) {\r\n    const body = await request.json();\r\n    const clint = await clientPromise;\r\n    const db = clint.db(\"Linktree\");\r\n    const collection = db.collection(\"Links\");\r\n\r\n    const doc  = await collection.findOne({username: body.username})\r\n\r\n    if(doc){\r\n      return Response.json({success:'false', error:'true', message: 'Already exist this username', result: null })\r\n    }\r\n\r\n   const result =  await collection.insertOne(body)\r\n    return Response.json({success:'true', error:'false', message: 'save your profile'})\r\n  }"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,uCAAE,GAAF,KAAK,OAAO;IAC9B,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,QAAQ,MAAM,gHAAA,CAAA,UAAa;IACjC,MAAM,KAAK,MAAM,EAAE,CAAC;IACpB,MAAM,aAAa,GAAG,UAAU,CAAC;IAEjC,MAAM,MAAO,MAAM,WAAW,OAAO,CAAC;QAAC,UAAU,KAAK,QAAQ;IAAA;IAE9D,IAAG,KAAI;QACL,OAAO,SAAS,IAAI,CAAC;YAAC,SAAQ;YAAS,OAAM;YAAQ,SAAS;YAA+B,QAAQ;QAAK;IAC5G;IAED,MAAM,SAAU,MAAM,WAAW,SAAS,CAAC;IAC1C,OAAO,SAAS,IAAI,CAAC;QAAC,SAAQ;QAAQ,OAAM;QAAS,SAAS;IAAmB;AACnF;;;IAdoB;;AAAA,iPAAA","debugId":null}}]
}