{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import CredentialsProvider from \"next-auth/providers/credentials\"\r\nimport NextAuth from \"next-auth/next\"\r\nconst authOptions = {\r\nproviders: [\r\n  CredentialsProvider({\r\n    name: 'Credentials',\r\n    credentials: {\r\n      email: { label: \"Email\", type: \"email\" },\r\n      password: { label: \"Password\", type: \"password\" }\r\n    },\r\n    async authorize(credentials) {\r\n      const { email, password } = credentials\r\n      const res = await fetch(\"http://localhost:3000/api/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      })\r\n      const user = await res.json()\r\n      if (res.ok && user) {\r\n        console.log(\"creewgflauier\",credentials)\r\n        return user\r\n      }\r\n      return null\r\n    }\r\n  })\r\n],\r\nsession: {\r\n  strategy: 'jwt',\r\n},\r\nsecret: process.env.NEXTAUTH_SECRET,\r\npages: {\r\n  signIn: '/generate',\r\n},\r\n}\r\n\r\nconst handler = NextAuth(authOptions)\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;AAAA;AACA;;;AACA,MAAM,cAAc;IACpB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;gBAC5B,MAAM,MAAM,MAAM,MAAM,mCAAmC;oBACzD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBAAE;wBAAO;oBAAS;gBACzC;gBACA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,IAAI,IAAI,EAAE,IAAI,MAAM;oBAClB,QAAQ,GAAG,CAAC,iBAAgB;oBAC5B,OAAO;gBACT;gBACA,OAAO;YACT;QACF;KACD;IACD,SAAS;QACP,UAAU;IACZ;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO;QACL,QAAQ;IACV;AACA;AAEA,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}