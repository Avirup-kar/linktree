{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/lib/mongodb.js"],"sourcesContent":["// lib/mongodb.js\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error('Add Mongo URI to .env.local')\r\n}\r\n\r\nif (process.env.NODE_ENV === 'development') { \r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options)\r\n    global._mongoClientPromise = client.connect()\r\n  }\r\n  clientPromise = global._mongoClientPromise\r\n} else {\r\n  client = new MongoClient(uri, options)\r\n  clientPromise = client.connect()\r\n}\r\n\r\nexport default clientPromise"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAEjB;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C,OAAO;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/app/api/update/route.js"],"sourcesContent":["import clientPromise from \"@/lib/mongodb\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const body = await request.json();\r\n    const { username, bio, profilepic, links, handel } = body;\r\n\r\n    if (!username) {\r\n      return NextResponse.json({ success: false, message: \"Username is required\" });\r\n    }\r\n\r\n    const client = await clientPromise;\r\n    const db = client.db(\"Linktree\");\r\n    const collection = db.collection(\"Links\");\r\n\r\n    // Update the user's data\r\n    const result = await collection.updateOne(\r\n      { username },\r\n      {\r\n        $set: {\r\n          bio,\r\n          profilepic,\r\n          links,\r\n          handel,\r\n        },\r\n      },\r\n      { upsert: true }\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: \"Profile updated successfully\",\r\n      result,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error in /api/update:\", error);\r\n    return NextResponse.json({ success: false, message: \"Internal server error\" });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;QAErD,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAuB;QAC7E;QAEA,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,CAAC;QACrB,MAAM,aAAa,GAAG,UAAU,CAAC;QAEjC,yBAAyB;QACzB,MAAM,SAAS,MAAM,WAAW,SAAS,CACvC;YAAE;QAAS,GACX;YACE,MAAM;gBACJ;gBACA;gBACA;gBACA;YACF;QACF,GACA;YAAE,QAAQ;QAAK;QAGjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB;IAC9E;AACF","debugId":null}}]
}