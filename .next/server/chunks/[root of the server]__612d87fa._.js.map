{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/lib/mongodb.js"],"sourcesContent":["// lib/mongodb.js\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error('Add Mongo URI to .env.local')\r\n}\r\n\r\nif (process.env.NODE_ENV === 'development') { \r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options)\r\n    global._mongoClientPromise = client.connect()\r\n  }\r\n  clientPromise = global._mongoClientPromise\r\n} else {\r\n  client = new MongoClient(uri, options)\r\n  clientPromise = client.connect()\r\n}\r\n\r\nexport default clientPromise"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAEjB;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,OAAO,mBAAmB;AAC5C,OAAO;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/aviru/.vscode/Every%20Project%20is%20Here/Linktree%20clon/link-tree/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import CredentialsProvider from \"next-auth/providers/credentials\"\r\nimport clientPromise from \"@/lib/mongodb\"\r\nimport NextAuth from \"next-auth/next\"\r\nconst authOptions = {\r\nproviders: [\r\n  CredentialsProvider({\r\n    name: 'Credentials',\r\n    credentials: {\r\n      email: { label: \"Email\", type: \"email\" },\r\n      password: { label: \"Password\", type: \"password\" }\r\n    },\r\n    async authorize(credentials) {\r\n      const { email, password } = credentials;\r\n      try {\r\n        const clint = await clientPromise;\r\n        const db = clint.db(\"Linktree\");\r\n        const collection = db.collection(\"Login\");\r\n    \r\n        // Find user by email\r\n        const doc = await collection.findOne({ email: email });\r\n        console.log(\"User found:\", doc.password);\r\n        console.log(\"User document:\", doc);\r\n        if (!doc) {\r\n          console.log(\"No user found with this email\");\r\n          return null;\r\n        }\r\n    \r\n        // Compare passwords\r\n        // const isValidPassword = await bcrypt.compare(password, doc.password);\r\n        // console.log(\"Password valid:\", isValidPassword);\r\n        if (password !== doc.password) {\r\n          console.log(\"Invalid password\");\r\n          return null;\r\n        }\r\n    \r\n        // Return user data\r\n        return { id: doc._id, email: doc.email, name: doc.username };\r\n      } catch (error) {\r\n        console.error(\"Error in authorize function:\", error);\r\n        return null;\r\n      }\r\n    }\r\n  })\r\n],\r\nsession: {\r\n  strategy: 'jwt',\r\n},\r\nsecret: process.env.NEXTAUTH_SECRET,\r\n// pages: {\r\n//   signIn: '/generate',\r\n// },\r\n}\r\n\r\nconst handler = NextAuth(authOptions)\r\nexport { handler as GET, handler as POST }"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACA,MAAM,cAAc;IACpB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;gBAC5B,IAAI;oBACF,MAAM,QAAQ,MAAM,gHAAA,CAAA,UAAa;oBACjC,MAAM,KAAK,MAAM,EAAE,CAAC;oBACpB,MAAM,aAAa,GAAG,UAAU,CAAC;oBAEjC,qBAAqB;oBACrB,MAAM,MAAM,MAAM,WAAW,OAAO,CAAC;wBAAE,OAAO;oBAAM;oBACpD,QAAQ,GAAG,CAAC,eAAe,IAAI,QAAQ;oBACvC,QAAQ,GAAG,CAAC,kBAAkB;oBAC9B,IAAI,CAAC,KAAK;wBACR,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,oBAAoB;oBACpB,wEAAwE;oBACxE,mDAAmD;oBACnD,IAAI,aAAa,IAAI,QAAQ,EAAE;wBAC7B,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,mBAAmB;oBACnB,OAAO;wBAAE,IAAI,IAAI,GAAG;wBAAE,OAAO,IAAI,KAAK;wBAAE,MAAM,IAAI,QAAQ;oBAAC;gBAC7D,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,gCAAgC;oBAC9C,OAAO;gBACT;YACF;QACF;KACD;IACD,SAAS;QACP,UAAU;IACZ;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AAInC;AAEA,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}